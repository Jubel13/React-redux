{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","store/ui-slice.js","store/cart-slice.js","store/index.js","components/UI/Card.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-action.js","index.js"],"names":["module","exports","uiSlice","createSlice","name","initialState","isShown","notifications","reducers","toggleShow","state","showNotifications","action","title","payload","status","message","uiActions","actions","cartSlice","items","totalQuantity","changed","replaceCart","addItemToCart","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","removeItemFromCart","filter","cartActions","store","configureStore","reducer","ui","cart","Card","props","className","classes","card","children","CartItem","dispatch","useDispatch","total","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","map","CartButton","button","badge","MainHeader","header","Layout","ProductItem","description","DUMMY_PRODUCTS","Products","products","product","Notification","specialClasses","error","success","cssClasses","notification","isInitial","App","cartShown","useEffect","a","fetchCart","fetch","response","ok","Error","json","data","cartData","sendRequest","method","body","JSON","stringify","console","log","sendCartData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f810a0b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__3PYq1\",\"details\":\"CartItem_details__2u3MC\",\"quantity\":\"CartItem_quantity__3a8Af\",\"price\":\"CartItem_price__2ISdf\",\"itemprice\":\"CartItem_itemprice__1Tu33\",\"actions\":\"CartItem_actions__2u9RN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__1PkrO\",\"price\":\"ProductItem_price__UjBBQ\",\"actions\":\"ProductItem_actions__1d2LJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2Tgpx\",\"error\":\"Notification_error__1X1hi\",\"success\":\"Notification_success__S7ANu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__1GsQK\",\"badge\":\"CartButton_badge__3zr9h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__30yGK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__ltx4-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__3weOW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__j5xVp\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst intialUiState = { isShown: false, notifications: null };\r\n\r\nconst uiSlice = createSlice({\r\n    name: \"ui\",\r\n    initialState: intialUiState,\r\n    reducers: {\r\n        toggleShow(state) {\r\n            state.isShown = !state.isShown;\r\n        },\r\n        showNotifications(state, action) {\r\n            state.notifications = {\r\n                title: action.payload.title,\r\n                status: action.payload.status,\r\n                message: action.payload.message,\r\n            };\r\n        },\r\n    },\r\n});\r\n\r\nexport const uiActions = uiSlice.actions;\r\n\r\nexport default uiSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCartState = { items: [], totalQuantity: 0, changed: false };\r\n\r\nconst cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState: initialCartState,\r\n    reducers: {\r\n        replaceCart(state, action) {\r\n            state.totalQuantity = action.payload.totalQuantity;\r\n            state.items = action.payload.items;\r\n        },\r\n        addItemToCart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(\r\n                (item) => item.id === newItem.id\r\n            );\r\n            state.totalQuantity++;\r\n            state.changed = true;\r\n            if (!existingItem) {\r\n                state.items.push({\r\n                    id: newItem.id,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title,\r\n                });\r\n            } else {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice =\r\n                    existingItem.totalPrice + newItem.price;\r\n            }\r\n        },\r\n        removeItemFromCart(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find((item) => item.id === id);\r\n            state.totalQuantity--;\r\n            state.changed = true;\r\n            if (existingItem.quantity === 1) {\r\n                state.items = state.items.filter((item) => item.id !== id);\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice =\r\n                    existingItem.totalPrice - existingItem.price;\r\n            }\r\n        },\r\n    },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport uiSlice from \"./ui-slice\";\r\nimport cartSlice from \"./cart-slice\";\r\n\r\nconst store = configureStore({\r\n    reducer: { ui: uiSlice.reducer, cart: cartSlice.reducer },\r\n});\r\n\r\nexport default store;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\n\nimport classes from \"./CartItem.module.css\";\n\nconst CartItem = (props) => {\n    const dispatch = useDispatch();\n    const { title, quantity, total, price, id } = props.item;\n\n    const removeItemHandler = () => {\n        dispatch(cartActions.removeItemFromCart(id));\n    };\n\n    const addItemHandler = () => {\n        dispatch(cartActions.addItemToCart({ title, price, id }));\n    };\n\n    return (\n        <li className={classes.item}>\n            <header>\n                <h3>{title}</h3>\n                <div className={classes.price}>\n                    ${total.toFixed(2)}{\" \"}\n                    <span className={classes.itemprice}>\n                        (${price.toFixed(2)}/item)\n                    </span>\n                </div>\n            </header>\n            <div className={classes.details}>\n                <div className={classes.quantity}>\n                    x <span>{quantity}</span>\n                </div>\n                <div className={classes.actions}>\n                    <button onClick={removeItemHandler}>-</button>\n                    <button onClick={addItemHandler}>+</button>\n                </div>\n            </div>\n        </li>\n    );\n};\n\nexport default CartItem;\n","import Card from \"../UI/Card\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\nimport { useSelector } from \"react-redux\";\n\nconst Cart = (props) => {\n    const cartItems = useSelector((state) => state.cart.items);\n    return (\n        <Card className={classes.cart}>\n            <h2>Your Shopping Cart</h2>\n            <ul>\n                {cartItems.map((item) => (\n                    <CartItem\n                        key={item.id}\n                        item={{\n                            id: item.id,\n                            title: item.name,\n                            quantity: item.quantity,\n                            total: item.totalPrice,\n                            price: item.price,\n                        }}\n                    />\n                ))}\n            </ul>\n        </Card>\n    );\n};\n\nexport default Cart;\n","import classes from \"./CartButton.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiActions } from \"../../store/ui-slice\";\n\nconst CartButton = (props) => {\n    const dispatch = useDispatch();\n    const totalQuantity = useSelector((state) => state.cart.totalQuantity);\n\n    const cartShownHandler = () => {\n        dispatch(uiActions.toggleShow());\n    };\n    return (\n        <button className={classes.button} onClick={cartShownHandler}>\n            <span>My Cart</span>\n            <span className={classes.badge}>{totalQuantity}</span>\n        </button>\n    );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\nimport Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\n\nconst ProductItem = (props) => {\n    const dispatch = useDispatch();\n    const { title, price, description, id } = props;\n\n    const addToCartHandler = () => {\n        dispatch(\n            cartActions.addItemToCart({\n                id,\n                title,\n                price,\n            })\n        );\n    };\n\n    return (\n        <li className={classes.item}>\n            <Card>\n                <header>\n                    <h3>{title}</h3>\n                    <div className={classes.price}>${price.toFixed(2)}</div>\n                </header>\n                <p>{description}</p>\n                <div className={classes.actions}>\n                    <button onClick={addToCartHandler}>Add to Cart</button>\n                </div>\n            </Card>\n        </li>\n    );\n};\n\nexport default ProductItem;\n","import ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\n\nconst DUMMY_PRODUCTS = [\n    {\n        id: \"p1\",\n        title: \"My First Book\",\n        price: 6,\n        description: \"My First book i have ever written\",\n    },\n    {\n        id: \"p2\",\n        title: \"My Second Book\",\n        price: 5,\n        description: \"My Second book i have ever written\",\n    },\n];\n\nconst Products = (props) => {\n    return (\n        <section className={classes.products}>\n            <h2>Buy your favorite products</h2>\n            <ul>\n                {DUMMY_PRODUCTS.map((product) => (\n                    <ProductItem\n                        key={product.id}\n                        id={product.id}\n                        title={product.title}\n                        price={product.price}\n                        description={product.description}\n                    />\n                ))}\n            </ul>\n        </section>\n    );\n};\n\nexport default Products;\n","import classes from \"./Notification.module.css\";\n\nconst Notification = (props) => {\n    let specialClasses = \"\";\n\n    if (props.status === \"error\") {\n        specialClasses = classes.error;\n    }\n    if (props.status === \"success\") {\n        specialClasses = classes.success;\n    }\n\n    const cssClasses = `${classes.notification} ${specialClasses}`;\n\n    return (\n        <section className={cssClasses}>\n            <h2>{props.title}</h2>\n            <p>{props.message}</p>\n        </section>\n    );\n};\n\nexport default Notification;\n","import Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Fragment, useEffect } from \"react\";\nimport Notifications from \"./components/UI/Notification\";\nimport { sendCartData, fetchCartData } from \"./store/cart-action\";\n\nlet isInitial = true;\n\nfunction App() {\n    const cartShown = useSelector((state) => state.ui.isShown);\n    const cart = useSelector((state) => state.cart);\n    const notifications = useSelector((state) => state.ui.notifications);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchCartData());\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (isInitial) {\n            isInitial = false;\n            return;\n        }\n        if (cart.changed) {\n            dispatch(sendCartData(cart));\n        }\n    }, [cart, dispatch]);\n\n    return (\n        <Fragment>\n            {notifications && (\n                <Notifications\n                    status={notifications.status}\n                    title={notifications.title}\n                    message={notifications.message}\n                />\n            )}\n            <Layout>\n                {cartShown && <Cart />}\n                <Products />\n            </Layout>\n        </Fragment>\n    );\n}\n\nexport default App;\n","import { uiActions } from \"./ui-slice\";\r\nimport { cartActions } from \"./cart-slice\";\r\n\r\nexport const fetchCartData = () => {\r\n    return async (dispatch) => {\r\n        const fetchCart = async () => {\r\n            const response = await fetch(\r\n                \"https://react-http-8325a-default-rtdb.firebaseio.com/cart.json\"\r\n            );\r\n            if (!response.ok) {\r\n                throw new Error(\"Failed to fetch\");\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data;\r\n        };\r\n\r\n        try {\r\n            const cartData = await fetchCart();\r\n            dispatch(\r\n                cartActions.replaceCart({\r\n                    items: cartData.items || [],\r\n                    totalQuantity: cartData.totalQuantity,\r\n                })\r\n            );\r\n        } catch (error) {\r\n            dispatch(\r\n                uiActions.showNotifications({\r\n                    title: \"Error!\",\r\n                    status: \"error\",\r\n                    message: \"Sending Cart Data Failed!\",\r\n                })\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport const sendCartData = (cart) => {\r\n    return async (dispatch) => {\r\n        dispatch(\r\n            uiActions.showNotifications({\r\n                title: \"Sending .....\",\r\n                status: \"pending\",\r\n                message: \"Sending Cart Data.....\",\r\n            })\r\n        );\r\n\r\n        const sendRequest = async () => {\r\n            const response = await fetch(\r\n                \"https://react-http-8325a-default-rtdb.firebaseio.com/cart.json\",\r\n                {\r\n                    method: \"PUT\",\r\n                    body: JSON.stringify({\r\n                        items: cart.items,\r\n                        totalQuantity: cart.totalQuantity,\r\n                    }),\r\n                }\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error(\"Sending Cart Data Failed!\");\r\n            }\r\n        };\r\n\r\n        try {\r\n            await sendRequest();\r\n\r\n            dispatch(\r\n                uiActions.showNotifications({\r\n                    title: \"Success\",\r\n                    status: \"success\",\r\n                    message: \"Send Cart Data success!\",\r\n                })\r\n            );\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch(\r\n                uiActions.showNotifications({\r\n                    title: \"Error!\",\r\n                    status: \"error\",\r\n                    message: \"Sending Cart Data Failed!\",\r\n                })\r\n            );\r\n        }\r\n    };\r\n};\r\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}